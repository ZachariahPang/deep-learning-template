# @package _global_

# specify here default configuration
# order of defaults determines the order in which configs override each other
defaults:
  - _self_
  - data: mnist.yaml
  - model: mnist.yaml
  - logger: null # set logger here or use command line (e.g. `python train.py logger=tensorboard`)
  # experiment configs allow for version control of specific hyperparameters
  # e.g. best hyperparameters for given model and datamodule
  - experiment: null

root_dir: .

# path to data directory
data_dir: ${root_dir}/data/

# path to logging directory
log_dir: ${root_dir}/logs/

# path to output directory, created dynamically by hydra
# path generation pattern is specified in `configs/hydra/default.yaml`
# use it to store all files generated during the run, like ckpts and metrics
output_dir: ${hydra:runtime.output_dir}

# path to working directory
work_dir: ${hydra:runtime.cwd}

# task name, determines output directory path
task_name: "train"

# tags to help you identify your experiments
# you can overwrite this in experiment configs
# overwrite from command line with `python train.py tags="[first_tag, second_tag]"`
tags: ["dev"]

# set False to skip model training
train: True

# evaluate on test set, using best model weights achieved during training
# lightning chooses best weights based on the metric specified in checkpoint callback
test: True

# simply provide checkpoint path to resume training
ckpt_path: null

# seed for random number generators in pytorch, numpy and python.random
seed: null

trainer:
  # trainer
  _target_: lightning.pytorch.trainer.Trainer

  default_root_dir: ${output_dir}

  min_epochs: 1 # prevents early stopping
  max_epochs: 10

  accelerator: cpu
  devices: 1

  # perform a validation loop every N training epochs
  check_val_every_n_epoch: 1



# hydra
hydra:
# enable color logging
  defaults:
    - override hydra_logging: colorlog
    - override job_logging: colorlog

  # output directory, generated dynamically on each run
  run:
    dir: ${log_dir}/${task_name}/runs/${now:%Y-%m-%d}_${now:%H-%M-%S}
  sweep:
    dir: ${log_dir}/${task_name}/multiruns/${now:%Y-%m-%d}_${now:%H-%M-%S}
    subdir: ${hydra.job.num}
